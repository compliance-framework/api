basePath: /api
definitions:
  api.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
  domain.Attestation:
    properties:
      parts:
        items:
          $ref: '#/definitions/domain.Part'
        type: array
      responsibleParties:
        items:
          type: string
        type: array
    type: object
  domain.Characterization:
    properties:
      facets:
        items:
          $ref: '#/definitions/domain.Facet'
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      origin:
        $ref: '#/definitions/domain.Origin'
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
    type: object
  domain.ControlsAndObjectives:
    properties:
      controlSelections:
        $ref: '#/definitions/domain.Selection'
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      objectives:
        items:
          $ref: '#/definitions/domain.ObjectiveSelection'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Evidence:
    properties:
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Facet:
    properties:
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      name:
        type: string
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      system:
        description: 'One of: http://fedramp.gov, http://fedramp.gov/ns/oscal, http://csrc.nist.gov/ns/oscal,
          http://csrc.nist.gov/ns/oscal/unknown, http://cve.mitre.org, http://www.first.org/cvss/v2.0,
          http://www.first.org/cvss/v3.0, http://www.first.org/cvss/v3.1'
        type: string
      title:
        type: string
      value:
        type: string
    type: object
  domain.Finding:
    properties:
      description:
        type: string
      id:
        type: string
      implementationStatementId:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      origins:
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      relatedObservations:
        items:
          type: string
        type: array
      relatedRisks:
        items:
          type: string
        type: array
      remarks:
        type: string
      target:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  domain.Link:
    properties:
      href:
        type: string
      mediaType:
        type: string
      rel:
        type: string
      resourceFragment:
        type: string
      text:
        type: string
    type: object
  domain.LocalDefinition:
    properties:
      activities:
        description: Reference to Activity
        items:
          type: string
        type: array
      components:
        description: Reference to component.Component
        items:
          type: string
        type: array
      inventoryItems:
        description: Reference to ssp.InventoryItem
        items:
          type: string
        type: array
      objectives:
        items:
          $ref: '#/definitions/domain.Objective'
        type: array
      remarks:
        type: string
      users:
        description: Reference to identity.User
        items:
          type: string
        type: array
    type: object
  domain.LogEntry:
    properties:
      description:
        type: string
      end:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      loggedBy:
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      start:
        type: string
      timestamp:
        type: string
      title:
        type: string
      type:
        type: integer
    type: object
  domain.Objective:
    properties:
      control:
        type: string
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      parts:
        items:
          $ref: '#/definitions/domain.Part'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.ObjectiveSelection:
    properties:
      description:
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
      includeAll:
        type: boolean
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Observation:
    properties:
      collected:
        type: string
      description:
        type: string
      evidences:
        items:
          $ref: '#/definitions/domain.Evidence'
        type: array
      expires:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Origin:
    properties:
      actors:
        items:
          type: string
        type: array
      relatedTasks:
        items:
          type: string
        type: array
    type: object
  domain.Part:
    properties:
      class:
        description: An optional textual providing a sub-type or characterization
          of the part's name, or a category to which the part belongs.
        type: string
      id:
        description: A unique identifier for the part.
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      name:
        description: A textual label that uniquely identifies the part's semantic
          type, which exists in a value space qualified by the ns.
        type: string
      ns:
        description: An optional namespace qualifying the part's name. This allows
          different organizations to associate distinct semantics with the same name.
        type: string
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      prose:
        description: Permits multiple paragraphs, lists, tables etc.
        type: string
      title:
        description: An optional name given to the part, which may be used by a tool
          for display and navigation.
        type: string
    type: object
  domain.Property:
    properties:
      class:
        type: string
      group:
        type: string
      name:
        type: string
      ns:
        type: string
      remarks:
        type: string
      value:
        type: string
    type: object
  domain.Result:
    properties:
      assessmentLogEntries:
        items:
          $ref: '#/definitions/domain.LogEntry'
        type: array
      attestations:
        items:
          $ref: '#/definitions/domain.Attestation'
        type: array
      description:
        type: string
      end:
        type: string
      findings:
        items:
          $ref: '#/definitions/domain.Finding'
        type: array
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      localDefinitions:
        $ref: '#/definitions/domain.LocalDefinition'
      observations:
        items:
          $ref: '#/definitions/domain.Observation'
        type: array
      potato:
        type: string
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      reviewedControls:
        items:
          $ref: '#/definitions/domain.ControlsAndObjectives'
        type: array
      risks:
        items:
          $ref: '#/definitions/domain.Risk'
        type: array
      start:
        type: string
      title:
        type: string
    type: object
  domain.Risk:
    properties:
      characterizations:
        items:
          $ref: '#/definitions/domain.Characterization'
        type: array
      deadline:
        type: string
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Selection:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
      includeAll:
        type: boolean
    type: object
  handler.attachMetadataRequest:
    properties:
      collection:
        type: string
      id:
        type: string
      revisionDescription:
        type: string
      revisionRemarks:
        type: string
      revisionTitle:
        type: string
    required:
    - collection
    - id
    type: object
  handler.catalogIdResponse:
    properties:
      id:
        description: |-
          The unique identifier of the catalog.
          Required: true
          Example: "123abc"
        type: string
    type: object
  handler.createActivityRequest:
    properties:
      description:
        type: string
      provider:
        properties:
          name:
            type: string
          package:
            type: string
          params:
            additionalProperties:
              type: string
            type: object
          version:
            type: string
        required:
        - name
        - package
        - version
        type: object
      subjects:
        properties:
          description:
            type: string
          expressions:
            items:
              properties:
                key:
                  type: string
                operator:
                  type: string
                values:
                  items:
                    type: string
                  type: array
              type: object
            type: array
          ids:
            items:
              type: string
            type: array
          labels:
            additionalProperties:
              type: string
            type: object
          query:
            type: string
          title:
            type: string
        required:
        - description
        - title
        type: object
      title:
        type: string
    required:
    - provider
    - title
    type: object
  handler.createCatalogRequest:
    properties:
      catalog:
        properties:
          title:
            type: string
        required:
        - title
        type: object
    type: object
  handler.createPlanRequest:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  handler.createSSPRequest:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  handler.createTaskRequest:
    properties:
      description:
        type: string
      title:
        description: 'TODO: We are keeping it minimal for now for the demo'
        type: string
      type:
        type: string
    required:
    - title
    - type
    type: object
  handler.idResponse:
    properties:
      id:
        description: |-
          The unique identifier of the plan.
          Required: true
          Example: "456def"
        type: string
    type: object
  service.ComplianceStatusByTargets:
    properties:
      compliance:
        type: string
      control:
        type: string
      target:
        type: string
    type: object
  service.ComplianceStatusOverTime:
    properties:
      date:
        type: string
      findings:
        type: integer
      observations:
        type: integer
      risks:
        type: integer
    type: object
  service.PlanSummary:
    properties:
      complianceStatus:
        type: string
      description:
        type: string
      endDate:
        type: string
      numControls:
        type: integer
      numObservations:
        type: integer
      numRisks:
        type: integer
      numSubjects:
        type: integer
      published:
        type: string
      riskLevels:
        $ref: '#/definitions/service.riskLevels'
      riskScore:
        type: number
      status:
        type: string
    type: object
  service.RemediationVsTime:
    properties:
      control:
        type: string
      remediation:
        type: string
    type: object
  service.riskLevels:
    properties:
      high:
        type: integer
      low:
        type: integer
      medium:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: This is the API for the Compliance Framework Configuration Service.
  title: Compliance Framework Configuration Service API
  version: "1.0"
paths:
  /api/plan:
    post:
      consumes:
      - application/json
      description: Creates a new plan in the system
      parameters:
      - description: Plan to add
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/handler.createPlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.idResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create a plan
      tags:
      - Plan
  /api/plan/{id}/activate:
    put:
      consumes:
      - application/json
      description: Activate a plan by its ID. If the plan is already active, no action
        will be taken.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal server error. The plan could not be activated.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Activate a plan
      tags:
      - Plan
  /api/plan/{id}/results:
    get:
      description: Return the assessment results related with the plan with the given
        ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Result'
            type: array
        "500":
          description: Internal server error. The plan could not be activated.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the assessment results
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/compliance-over-time:
    get:
      description: Return the compliance over time of the result with the given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ComplianceStatusOverTime'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the compliance over time
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/compliance-status:
    get:
      description: Return the compliance status by targets of the result with the
        given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ComplianceStatusByTargets'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the compliance status by targets
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/findings:
    get:
      description: Return the findings of the result with the given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Finding'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the findings
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/observations:
    get:
      description: Return the observations of the result with the given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Observation'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the observations
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/remediation-vs-time:
    get:
      description: Return the remediation versus time of the result with the given
        ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.RemediationVsTime'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the remediation versus time
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/risks:
    get:
      description: Return the risks of the result with the given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Risk'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the risks
      tags:
      - Plan
  /api/plan/{id}/results/{resultId}/summary:
    get:
      description: Return the summary of the result with the given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.PlanSummary'
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the result summary
      tags:
      - Plan
  /api/plan/{id}/tasks:
    post:
      consumes:
      - application/json
      description: This method creates a new task and adds it to a specific plan.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Task to add
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handler.createTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added the task to the plan
          schema:
            type: string
        "404":
          description: Plan not found
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: 'Unprocessable Entity: Error binding the request'
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Creates a new task for a specific plan
      tags:
      - Plan
  /api/plan/{id}/tasks/{taskId}/activities:
    post:
      consumes:
      - application/json
      description: This function is used to create an activity for a given task.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: Activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/handler.createActivityRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: "201"
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create activity
      tags:
      - Plan
  /api/ssp:
    post:
      consumes:
      - application/json
      description: Create an SSP with the given title
      parameters:
      - description: SSP to add
        in: body
        name: SSP
        required: true
        schema:
          $ref: '#/definitions/handler.createSSPRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.idResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create an SSP
      tags:
      - SSP
  /catalog:
    post:
      consumes:
      - application/json
      description: Create a catalog with the given title
      parameters:
      - description: Catalog to add
        in: body
        name: catalog
        required: true
        schema:
          $ref: '#/definitions/handler.createCatalogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.catalogIdResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create a catalog
      tags:
      - Catalog
  /metadata/revisions:
    post:
      consumes:
      - application/json
      description: This method attaches metadata to a specific revision.
      parameters:
      - description: Revision that will be attached
        in: body
        name: revision
        required: true
        schema:
          $ref: '#/definitions/handler.attachMetadataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: 'Bad Request: Error binding the request'
          schema:
            $ref: '#/definitions/api.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Attaches metadata to a specific revision
      tags:
      - Metadata
swagger: "2.0"
