{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Continuous Compliance Framework.",
        "title": "Continuous Compliance Framework API",
        "contact": {},
        "version": "1"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/catalogs": {
            "get": {
                "description": "Retrieves all catalogs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalogs"
                ],
                "summary": "List catalogs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_Catalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new catalog.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalogs"
                ],
                "summary": "Create a new catalog",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Catalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/catalogs/{id}": {
            "get": {
                "description": "Retrieves a single Catalog by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalogs"
                ],
                "summary": "Get a Catalog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Catalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/compliance-by-uuid/{uuid}": {
            "get": {
                "description": "Fetches an intervalled compliance report for findings that match the provided uuid. The report groups findings status over time and returns a list of compliance report groups.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Get intervalled compliance report by finding uuid",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_StatusOverTimeGroup"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/controls": {
            "get": {
                "description": "Retrieves catalog controls for a given parent identifier specified via query parameters (id, class, type).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CatalogControls"
                ],
                "summary": "List catalog controls by parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Parent identifier id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent identifier class",
                        "name": "class",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent identifier type (catalog, group, or control)",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_CatalogControl"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/controls/control/{catalog}/{class}/{id}": {
            "get": {
                "description": "Retrieves catalog controls associated with a control parent based on the parent's class and id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CatalogControls"
                ],
                "summary": "Get catalog controls for a control parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent control class",
                        "name": "class",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent control id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_CatalogControl"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/controls/group/{catalog}/{class}/{id}": {
            "get": {
                "description": "Retrieves catalog controls associated with a group parent based on the parent's class and id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CatalogControls"
                ],
                "summary": "Get catalog controls for a group parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent control class",
                        "name": "class",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent control id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_CatalogControl"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/dashboard": {
            "get": {
                "description": "Retrieves all dashboards.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "List dashboards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_Dashboard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new dashboard.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "Create a new dashboard",
                "parameters": [
                    {
                        "description": "Dashboard to add",
                        "name": "dashboard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.createDashboardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Dashboard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/dashboard/{id}": {
            "get": {
                "description": "Retrieves a single dashboard by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboards"
                ],
                "summary": "Get a dashboard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dashboard ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Dashboard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings": {
            "post": {
                "description": "Creates multiple findings in the CCF API, as well as their subject and component counterparts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Create new findings",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/by-control/{class}": {
            "get": {
                "description": "Searches for findings and groups them by control class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Search findings grouped by control class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Control Class",
                        "name": "class",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_FindingsGroupedByControl"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/compliance-by-search": {
            "post": {
                "description": "Fetches an intervalled compliance report for findings that match the provided label filter. The report groups findings status over time and returns a list of compliance report groups.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Get intervalled compliance report by search",
                "parameters": [
                    {
                        "description": "Label filter criteria",
                        "name": "filter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/labelfilter.Filter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_StatusOverTimeGroup"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/history/{uuid}": {
            "get": {
                "description": "Fetches up to 200 findings (ordered by Collected descending) that share the same stream UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Get finding history by stream UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stream UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_Finding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/instant-compliance-by-control/{class}/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Get compliance report by controlID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Label filter criteria",
                        "name": "class",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label filter criteria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_StatusOverTimeRecord"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/list-control-classes": {
            "get": {
                "description": "Retrieves all unique control classes found in the stored findings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "List unique control classes from findings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/search": {
            "post": {
                "description": "Searches for findings using label filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Search findings by labels",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_Finding"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/search-by-subject": {
            "post": {
                "description": "Searches for findings, and groups them by subject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Search findings grouped by subject",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_FindingsBySubject"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/findings/{id}": {
            "get": {
                "description": "Fetches a finding based on its internal ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Findings"
                ],
                "summary": "Get a single finding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Finding ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_Finding"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/groups/catalog/{catalog}": {
            "get": {
                "description": "Retrieves catalog groups that belong to a catalog, identified by its unique catalog ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CatalogGroups"
                ],
                "summary": "Get catalog groups for a catalog parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_CatalogGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/groups/children/{class}/{id}": {
            "get": {
                "description": "Retrieves catalog groups that belong to a parent group, identified by its class and ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CatalogGroups"
                ],
                "summary": "Get catalog groups for a group parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent group class",
                        "name": "class",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parent group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_CatalogGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/observations": {
            "post": {
                "description": "Creates multiple observations in the CCF API, along with their subject and component counterparts.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Observations"
                ],
                "summary": "Create new observations",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/observations/history/{uuid}": {
            "get": {
                "description": "Fetches up to 200 observations (ordered by Collected descending) that share the same stream UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Observations"
                ],
                "summary": "Get observation history by stream UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stream UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-service_Observation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/observations/{id}": {
            "get": {
                "description": "Fetches an observation based on its internal ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Observations"
                ],
                "summary": "Get a single observation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Observation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Observation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/oscal/catalogs": {
            "get": {
                "description": "Retrieves all catalogs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Oscal Catalogs"
                ],
                "summary": "List catalogs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataListResponse-oscal_List_responseCatalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/oscal/catalogs/{id}": {
            "get": {
                "description": "Retrieves a single Catalog by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Oscal Catalogs"
                ],
                "summary": "Get a Catalog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-oscal_Get_responseCatalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/oscal/catalogs/{id}/back-matter": {
            "get": {
                "description": "Retrieves the back-matter for a given Catalog.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Oscal Catalogs"
                ],
                "summary": "Get back-matter for a Catalog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-oscalTypes_1_1_3_BackMatter"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/subjects": {
            "get": {
                "description": "Retrieves a list of all subjects from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "Get all subjects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-array_service_Subject"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        },
        "/subjects/{id}": {
            "get": {
                "description": "Fetches a subject based on its internal ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "Get a single subject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subject ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Subject"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a subject from the database based on its internal ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "Delete a subject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subject ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a subject's title and/or remarks based on the provided subject ID. Only title and remarks are updated if provided. If no fields are provided, a `400 Bad Request` is returned.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subjects"
                ],
                "summary": "Update a subject's title and/or remarks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subject ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Title and remarks data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateSubjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GenericDataResponse-service_Subject"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Error": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "handler.GenericDataListResponse-oscal_List_responseCatalog": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscal.List.responseCatalog"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_Catalog": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Catalog"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_CatalogControl": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.CatalogControl"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_CatalogGroup": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.CatalogGroup"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_Dashboard": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Dashboard"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_Finding": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Finding"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_FindingsBySubject": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.FindingsBySubject"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_FindingsGroupedByControl": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.FindingsGroupedByControl"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_Observation": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Observation"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_StatusOverTimeGroup": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.StatusOverTimeGroup"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-service_StatusOverTimeRecord": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.StatusOverTimeRecord"
                    }
                }
            }
        },
        "handler.GenericDataListResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.GenericDataResponse-array_service_Subject": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Subject"
                    }
                }
            }
        },
        "handler.GenericDataResponse-oscalTypes_1_1_3_BackMatter": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/oscalTypes_1_1_3.BackMatter"
                        }
                    ]
                }
            }
        },
        "handler.GenericDataResponse-oscal_Get_responseCatalog": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/oscal.Get.responseCatalog"
                        }
                    ]
                }
            }
        },
        "handler.GenericDataResponse-service_Catalog": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/service.Catalog"
                        }
                    ]
                }
            }
        },
        "handler.GenericDataResponse-service_Dashboard": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/service.Dashboard"
                        }
                    ]
                }
            }
        },
        "handler.GenericDataResponse-service_Observation": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/service.Observation"
                        }
                    ]
                }
            }
        },
        "handler.GenericDataResponse-service_Subject": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Items from the list response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/service.Subject"
                        }
                    ]
                }
            }
        },
        "handler.UpdateSubjectRequest": {
            "type": "object",
            "properties": {
                "remarks": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "handler.createDashboardRequest": {
            "type": "object",
            "required": [
                "filter",
                "name"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/labelfilter.Filter"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "labelfilter.Condition": {
            "type": "object",
            "properties": {
                "label": {
                    "description": "Label name (e.g., \"type\", \"group\", \"app\").",
                    "type": "string"
                },
                "operator": {
                    "description": "Operator (e.g., \"=\", \"!=\", etc.).",
                    "type": "string"
                },
                "value": {
                    "description": "Value for the condition (e.g., \"ssh\", \"prod\").",
                    "type": "string"
                }
            }
        },
        "labelfilter.Filter": {
            "type": "object",
            "properties": {
                "scope": {
                    "$ref": "#/definitions/labelfilter.Scope"
                }
            }
        },
        "labelfilter.Query": {
            "type": "object",
            "properties": {
                "operator": {
                    "description": "Logical operator (e.g., \"AND\", \"OR\").",
                    "type": "string"
                },
                "scopes": {
                    "description": "Scopes can be either `Condition` or nested `Query`.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/labelfilter.Scope"
                    }
                }
            }
        },
        "labelfilter.Scope": {
            "type": "object",
            "properties": {
                "condition": {
                    "$ref": "#/definitions/labelfilter.Condition"
                },
                "query": {
                    "$ref": "#/definitions/labelfilter.Query"
                }
            }
        },
        "oscal.Get.responseCatalog": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/oscalTypes_1_1_3.Metadata"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "oscal.List.responseCatalog": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/oscalTypes_1_1_3.Metadata"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Action": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "responsible-parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.ResponsibleParty"
                    }
                },
                "system": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Address": {
            "type": "object",
            "properties": {
                "addr-lines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postal-code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.BackMatter": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Resource"
                    }
                }
            }
        },
        "oscalTypes_1_1_3.Base64": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "media-type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Citation": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.DocumentId": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Hash": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "media-type": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                },
                "resource-fragment": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/oscalTypes_1_1_3.Address"
                },
                "email-addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "telephone-numbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.TelephoneNumber"
                    }
                },
                "title": {
                    "type": "string"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Metadata": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Action"
                    }
                },
                "document-ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.DocumentId"
                    }
                },
                "last-modified": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Location"
                    }
                },
                "oscal-version": {
                    "type": "string"
                },
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Party"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "published": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "responsible-parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.ResponsibleParty"
                    }
                },
                "revisions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.RevisionHistoryEntry"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Role"
                    }
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Part": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "ns": {
                    "type": "string"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Part"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "prose": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Party": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Address"
                    }
                },
                "email-addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "external-ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.PartyExternalIdentifier"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "location-uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "member-of-organizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "short-name": {
                    "type": "string"
                },
                "telephone-numbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.TelephoneNumber"
                    }
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.PartyExternalIdentifier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "scheme": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Property": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ns": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Resource": {
            "type": "object",
            "properties": {
                "base64": {
                    "$ref": "#/definitions/oscalTypes_1_1_3.Base64"
                },
                "citation": {
                    "$ref": "#/definitions/oscalTypes_1_1_3.Citation"
                },
                "description": {
                    "type": "string"
                },
                "document-ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.DocumentId"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "rlinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.ResourceLink"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.ResourceLink": {
            "type": "object",
            "properties": {
                "hashes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Hash"
                    }
                },
                "href": {
                    "type": "string"
                },
                "media-type": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.ResponsibleParty": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "party-uuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "role-id": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.RevisionHistoryEntry": {
            "type": "object",
            "properties": {
                "last-modified": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "oscal-version": {
                    "type": "string"
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "published": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.Role": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "short-name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "oscalTypes_1_1_3.TelephoneNumber": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service.Catalog": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/oscalTypes_1_1_3.Metadata"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "service.CatalogControl": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "parent": {
                    "$ref": "#/definitions/service.CatalogItemParentIdentifier"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Part"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID as a primary key, although it likely won't be used.\nThe primary key for a group consists of a compound (class + id)",
                    "type": "string"
                }
            }
        },
        "service.CatalogGroup": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Link"
                    }
                },
                "parent": {
                    "$ref": "#/definitions/service.CatalogItemParentIdentifier"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Part"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/oscalTypes_1_1_3.Property"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID as a primary key, although it likely won't be used.\nThe primary key for a group consists of a compound (class + id)",
                    "type": "string"
                }
            }
        },
        "service.CatalogItemParentIdentifier": {
            "type": "object",
            "properties": {
                "catalog_id": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/service.CatalogItemParentType"
                }
            }
        },
        "service.CatalogItemParentType": {
            "type": "string",
            "enum": [
                "control",
                "group",
                "catalog"
            ],
            "x-enum-varnames": [
                "CatalogItemParentTypeControl",
                "CatalogItemParentTypeGroup",
                "CatalogItemParentTypeCatalog"
            ]
        },
        "service.Dashboard": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/labelfilter.Filter"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "service.Finding": {
            "type": "object",
            "properties": {
                "_id": {
                    "description": "ID is the unique ID for this specific observation, and will be used as the primary key in the database.",
                    "type": "string"
                },
                "collected": {
                    "type": "string"
                },
                "components": {
                    "description": "Which components of the subject are being judged",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "controls": {
                    "description": "Which controls did we validate",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ControlReference"
                    }
                },
                "description": {
                    "type": "string"
                },
                "labels": {
                    "description": "Labels represent the unique labels which can be used to filter for findings in the UI.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "observations": {
                    "description": "Which observations led to this judgment ?",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "origins": {
                    "description": "Who is generating this finding",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Origin"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "risks": {
                    "description": "Which risks are associated with what we've tested",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RiskReference"
                    }
                },
                "status": {
                    "description": "What is our conclusion drawn for this finding. satisfied | not-satisfied",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.FindingStatus"
                        }
                    ]
                },
                "subjects": {
                    "description": "What are we making a judgement against",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID needs to remain consistent when automation runs again, but unique for each subject.\nIt represents the \"stream\" of the same finding being made over time.",
                    "type": "string"
                }
            }
        },
        "service.FindingsBySubject": {
            "type": "object",
            "properties": {
                "findings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Finding"
                    }
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "service.FindingsGroupedByControl": {
            "type": "object",
            "properties": {
                "controlid": {
                    "type": "string"
                },
                "findings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Finding"
                    }
                }
            }
        },
        "service.Observation": {
            "type": "object",
            "properties": {
                "_id": {
                    "description": "ID is the unique ID for this specific observation, and will be used as the primary key in the database.",
                    "type": "string"
                },
                "activities": {
                    "description": "What steps did we take to make this observation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Activity"
                    }
                },
                "collected": {
                    "type": "string"
                },
                "components": {
                    "description": "Which components of the subject are being observed",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "expires": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "origins": {
                    "description": "Who is generating this finding",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Origin"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "relevant-evidence": {
                    "description": "What exactly did we see",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RelevantEvidence"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "subjects": {
                    "description": "What are we observing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID needs to remain consistent when automation runs again, but unique for each subject.\nIt represents the \"stream\" of the same observation being made over time.",
                    "type": "string"
                }
            }
        },
        "service.StatusOverTimeGroup": {
            "type": "object",
            "properties": {
                "interval": {
                    "type": "string"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.StatusOverTimeRecord"
                    }
                }
            }
        },
        "service.StatusOverTimeRecord": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.Subject": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "types.Activity": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Step"
                    }
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "types.ControlReference": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "control-id": {
                    "type": "string"
                },
                "statement-ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.FindingStatus": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "types.Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "media-type": {
                    "type": "string"
                },
                "rel": {
                    "type": "string"
                },
                "resource-fragment": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "types.Origin": {
            "type": "object",
            "properties": {
                "actors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.OriginActor"
                    }
                }
            }
        },
        "types.OriginActor": {
            "type": "object",
            "properties": {
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "types.Property": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ns": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "types.RelevantEvidence": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                }
            }
        },
        "types.RiskReference": {
            "type": "object",
            "properties": {
                "href": {
                    "description": "If a Href is specified here, it means we are referencing a common risk, and should be pulled from there.",
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "origins": {
                    "description": "Who is generating this risk",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Origin"
                    }
                },
                "status": {
                    "description": "The status for the risk. This can either be open|closed based on whether the risk is active or not.",
                    "type": "string"
                },
                "threat-ids": {
                    "description": "These threats relate to well known threats like phishing emails, brute force attacks, etc. often detailed\nby cyber-security organisations.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ThreatId"
                    }
                }
            }
        },
        "types.Step": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Link"
                    }
                },
                "props": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Property"
                    }
                },
                "remarks": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "types.ThreatId": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "system": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}