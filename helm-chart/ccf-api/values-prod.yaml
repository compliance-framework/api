# Production values for ccf-api
# IMPORTANT: Never commit actual passwords to git!
# Use --set flags, sealed secrets, or external secret operators

global:
  environment: prod

api:
  replicaCount: 3
  
  image:
    repository: your-registry.io/ccf/api
    tag: "1.0.0"  # Always use specific version tags
    pullPolicy: Always
  
  service:
    type: ClusterIP  # Use Ingress for external access
    port: 8080
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  auth:
    # These MUST be overridden with secure values
    jwtSecret: ""  # Set via --set or external secret
    apiKey: ""     # Set via --set or external secret
  
  logLevel: "warn"

postgresql:
  image:
    repository: postgres
    tag: "17.5-alpine"
    pullPolicy: IfNotPresent
  
  auth:
    username: ccf_prod
    password: ""  # MUST be set via --set or external secret
    database: ccf_prod
  
  ssl:
    enabled: true
    mode: "require"
  
  persistence:
    enabled: true
    size: 50Gi
    storageClass: "fast-ssd"  # Use appropriate storage class
  
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: api.ccf.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: ccf-api-tls
      hosts:
        - api.ccf.yourdomain.com

# Security settings
networkPolicy:
  enabled: true

podDisruptionBudget:
  enabled: true
  minAvailable: 2

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80